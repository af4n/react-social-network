{"version":3,"sources":["assets/images/preloader.gif","components/Common/FormsControls/FormsControls.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Settings/Settings.jsx","utils/validators.js","components/Common/FormsControls/FormsControls.js","components/Login/Login.jsx","components/Dialogs/DialogItems/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Common/Preloader/Preloader.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Common/Pagination/Pagination.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","App.js","index.js","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/user-photo.png","components/Common/Pagination/Pagination.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Users/Users.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","log","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","securityAPI","initialState","posts","id","likesCount","message","setUserStatus","type","getUserProfile","dispatch","a","profileReducer","state","action","newPostText","photos","dialogs","name","messages","dialogsReducer","body","newMessageText","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalItemsCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","usersReducer","followed","filter","SET_AUTH_USER_DATA","GET_CAPTCHA_SUCCESS","login","isAuth","captcha","setAuthUserData","getCaptchaSuccess","getAuthUserData","getCaptcha","url","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogPage","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","props","className","styles","header","src","alt","loginBlock","onClick","logout","to","HeaderContainer","this","React","Component","connect","Navbar","nav","item","activeClassName","activeLink","Settings","required","value","maxLengthCreator","maxLength","length","Textarea","input","meta","hasError","touched","error","formControl","Input","createField","placeholder","validate","component","text","Field","maxLength30","LoginReduxForm","reduxForm","onSubmit","handleSubmit","formSummaryError","captchaUrl","stopSubmit","_error","Redirect","DialogItem","path","dialog","userPhoto","Message","maxLength50","AddMessageFormRedux","Dialogs","dialogsElements","key","messagesElements","dialogItems","values","sendMessage","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","sendMessageCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","autoFocus","ProfileDataFormReduxForm","Object","keys","contacts","ProfileData","profileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","isOwner","goToEditMode","Contact","contact","ProfileInfo","discriptionBlock","profilePhoto","large","target","files","discriptionInfo","initialValues","Post","itemBody","MyPosts","memo","postsElements","reverse","myPostBlock","myPostTitle","AddNewPostFormRedux","addPost","addNewPost","MyPostsContainer","addPostActionCreator","Preloader","preloader","Profile","ProfileContainer","refreshProfile","params","authorizedUserId","history","push","getUserStatus","prevProps","prevState","snapshot","file","getState","Promise","reject","withRouter","Pagination","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","btnPagination","p","cn","selectedPage","pageNumber","onPageChanged","User","user","small","disabled","some","Users","createSelector","getPageSize","getTotalItemsCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","bind","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","render","DialogsContainer","promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2debeffb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.0236b312.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__hIcs4\",\"error\":\"FormsControls_error__SvvIg\",\"formSummaryError\":\"FormsControls_formSummaryError__3-MVX\",\"contacts\":\"FormsControls_contacts__31Klz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__fcwLm\",\"item\":\"Navbar_item__3FKVG\",\"activeLink\":\"Navbar_activeLink__3T6DR\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": \"74a5532c-9406-4acb-a75c-f9f31ea020a6\"\r\n  }\r\n})\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 1) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n  },\r\n  getProfile(userId) {\r\n    console.log(\"Obsolete method. Please profileAPI object.\")\r\n    return profileAPI.getProfile(userId);\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/` + userId)\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/` + userId)\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, {status: status})\r\n  },\r\n  savePhoto(photoFile) {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", photoFile);\r\n    return instance.put(`profile/photo`, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\"\r\n      }\r\n    })\r\n  },\r\n  saveProfile(profile) {\r\n    return instance.put(`profile`, profile)\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, {email, password, rememberMe})\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n  }\r\n}\r\n\r\nexport const securityAPI = {\r\n  getCaptcha() {\r\n    return instance.get(`security/get-captcha-url`)\r\n  }\r\n}\r\n\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\n// const DELETE_POST = \"DELETE_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_USER_STATUS = \"SET_USER_STATUS\";\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, likesCount: 15, message: \"Hi, how are yuo?\" },\r\n    { id: 2, likesCount: 21, message: \"It's my first post!\" },\r\n    { id: 3, likesCount: 9, message: \"Hello.\" }\r\n  ],\r\n  profile: null,\r\n  status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, {id: 4, likesCount: 0, message: action.newPostText}],\r\n      }\r\n    // case DELETE_POST:\r\n    //   return {\r\n    //     ...state,\r\n    //     posts: state.posts.filter(p => p.id != action.postId)\r\n    //   }\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state, profile: action.profile\r\n      }\r\n    }\r\n    case SET_USER_STATUS: {\r\n      return {\r\n        ...state, status: action.status\r\n      }\r\n    }\r\n    case SAVE_PHOTO_SUCCESS: {\r\n      return {\r\n        ...state, profile: {...state.profile, photos: action.photos}\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\n//export const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  const response = await usersAPI.getProfile(userId)\r\n  dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n  const response = await profileAPI.getStatus(userId)\r\n  dispatch(setUserStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  const response = await profileAPI.updateStatus(status)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setUserStatus(status));\r\n  }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n  const response = await profileAPI.savePhoto(file)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(savePhotoSuccess(response.data.data.photos));\r\n  }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId\r\n  const response = await profileAPI.saveProfile(profile)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getUserProfile(userId));\r\n  } else {\r\n    dispatch(stopSubmit(\"editProfile\", {_error: response.data.messages[0]}))\r\n    return Promise.reject(response.data.messages[0])\r\n  }\r\n}\r\n\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Dima\" },\r\n    { id: 2, name: \"Ilona\" },\r\n    { id: 3, name: \"Leha\" },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: \"Hi\"},\r\n    { id: 2, message: \"How is yuor\"},\r\n    { id: 3, message: \"Yo!\"},\r\n    { id: 4, message: \"Goodbye\"},\r\n  ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageText\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: 5, message: body}]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText})\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n  return items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n      return {...u, ...newObjProps}\r\n    }\r\n    return u;\r\n  })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalItemsCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n      }\r\n    case SET_USERS:\r\n      return {\r\n        ...state,users: action.users\r\n      }\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state, currentPage: action.currentPage\r\n      }\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state, totalItemsCount: action.count\r\n      }\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state, isFetching: action.isFetching\r\n      }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id != action.userId)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalItemsCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalItemsCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page))\r\n    let response = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.items));\r\n    dispatch(setTotalUsersCount(response.totalCount));\r\n  }\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.resultCode === 0) {\r\n      dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n  }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n  }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'social-network/auth/SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_SUCCESS = 'social-network/auth/GET_CAPTCHA_SUCCESS';\r\n\r\nlet initialState = {\r\n  id: null,\r\n  login: null,\r\n  email: null,\r\n  isFetching: false,\r\n  isAuth: false,\r\n  captcha: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.data\r\n      }\r\n    case GET_CAPTCHA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.captcha\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setAuthUserData = (userId, login, email, isAuth) => ({type: SET_AUTH_USER_DATA, data: {userId, login, email, isAuth}})\r\nexport const getCaptchaSuccess = (captcha) => ({type: GET_CAPTCHA_SUCCESS, captcha })\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  const response = await authAPI.me()\r\n  if (response.resultCode === 0) {\r\n    let {id, login, email} = response.data;\r\n    dispatch(setAuthUserData(id, login, email, true))\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  const response = await authAPI.login(email, password, rememberMe)\r\n  if (response.resultCode === 0) {\r\n    dispatch(getAuthUserData())\r\n  } else {\r\n    if (response.resultCode === 10) {\r\n      dispatch(getCaptcha())\r\n    }\r\n    let message = response.messages.length > 0 ? response.messages[0] : \"Some error\"\r\n    dispatch(stopSubmit(\"login\", {_error: message}))\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  const response = await authAPI.logout()\r\n  if (response.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n}\r\n\r\nexport const getCaptcha = () => async (dispatch) => {\r\n  const response = await securityAPI.getCaptcha()\r\n  const captcha = response.data.url\r\n  dispatch(getCaptchaSuccess(captcha))\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n  initialized: false\r\n\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case SET_INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: SET_INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  Promise.all([promise])\r\n    .then(() => {\r\n      dispatch(initializedSuccess());\r\n    })\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\nexport default store;","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <div>\r\n        <img\r\n          src=\"https://everlife.ai/images/muscari/header-image-muscari.png\"\r\n          alt=\"logo\"\r\n        />\r\n        <span>Social network</span>\r\n      </div>\r\n      <div className={styles.loginBlock}>\r\n        {props.isAuth\r\n          ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n          : <NavLink to={\"/login\"}>Log in</NavLink>}\r\n      </div>\r\n\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n  logout\r\n})(HeaderContainer);\r\n","import React from \"react\";\r\nimport styles from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/profile\" activeClassName={styles.activeLink}>Profile</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={styles.activeLink}>Messages</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/users\" activeClassName={styles.activeLink}>Users</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/settings\" activeClassName={styles.activeLink}>Settings</NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport styles from \"./Settings.module.css\"\r\n\r\nconst Settings = (props) => {\r\n  return (\r\n    <div>\r\n      Setings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","export const required = (value) => {\r\n  if (value) {\r\n    return undefined;\r\n  }\r\n  return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) {\r\n    return `Max length is ${maxLength} symbols`;\r\n  }\r\n  return undefined;\r\n}","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <div>\r\n        <textarea {...input} {...props} />\r\n      </div>\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <div>\r\n        <input {...input} {...props} />\r\n      </div>\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport const createField = (type, name, placeholder, validate, component, props ={}, text = \"\") => {\r\n  return (\r\n    <div>\r\n      <Field type={type}\r\n             name={name}\r\n             placeholder={placeholder}\r\n             validate={validate}\r\n             component={component}\r\n             {...props}\r\n      /> {text}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport styles from \"../Common/FormsControls/FormsControls.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      {createField(\"text\", \"email\", \"Email\", [required, maxLength30], Input)}\r\n      {createField(\"password\", \"password\", \"Password\", [required, maxLength30], Input)}\r\n      {createField(\"checkbox\", \"rememberMe\", null, null, Input)}\r\n      {props.captcha && <img src={props.captcha} alt=\"captcha\"/>}\r\n      {props.error && <div className={styles.formSummaryError}>\r\n        {props.error}\r\n      </div>}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe)\r\n  }\r\n  if (props.isAuth) {\r\n    return <Redirect to=\"/profile\" />\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} captcha={props.captcha} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n  login\r\n})\r\n(Login);","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../assets/images/user-photo.png\"\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <img src={userPhoto} alt=\"photo\"/>\r\n      <NavLink activeClassName={styles.activeLink} to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\"\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={styles.message}>{props.message}</div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItems/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogPage;\r\n  let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>)\r\n  let messagesElements = state.messages.map(message => <Message message={message.message} key={message.id}/>)\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageText);\r\n  }\r\n\r\n  // if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={styles.messages}>\r\n        {messagesElements}\r\n        <div>\r\n          <h4>New message</h4>\r\n          <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name={\"newMessageText\"} component={Textarea} placeholder={\"Enter your message\"}\r\n               validate={[required, maxLength50]}/>\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n  form: \"dialogAddMessageForm\"\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n\r\n","import Redirect from \"react-router-dom/es/Redirect\";\r\nimport Dialogs from \"../components/Dialogs/Dialogs\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n  return connectedAuthRedirectComponent;\r\n}\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\"\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogPage: state.dialogPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageText) => {\r\n      dispatch(sendMessageCreator(newMessageText));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div>\r\n          <b>Status: </b><span onDoubleClick={activateEditMode} >{props.status || \"-----\"}</span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n      <div>\r\n        <input onChange={onStatusChange} onBlur={deactivateEditMode} value={status} autoFocus={true} type=\"text\"/>\r\n      </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import React from \"react\";\r\nimport {createField, Input} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport styles from \"../../Common/FormsControls/FormsControls.module.css\"\r\n\r\nconst ProfileDataForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div><button>Save</button></div>\r\n      {\r\n        props.error &&\r\n        <div className={styles.formSummaryError}>{props.error}</div>\r\n      }\r\n      <div><b>Full name</b>: {createField(\"text\", \"fullName\", \"Full name\", [], Input)}</div>\r\n      <div><b>Looking for a job</b>: {createField(\"checkbox\", \"lookingForAJob\", \"\", [], Input)}</div>\r\n      <div><b>My professional skills</b>: {createField(\"text\", \"lookingForAJobDescription\", \"My professional skills\", [], Input)}</div>\r\n      <div><b>About me</b>: {createField(\"text\", \"aboutMe\", \"About me\", [], Input)}</div>\r\n      <div>\r\n        <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n        return (\r\n          <div key={key} className={styles.contacts}>\r\n            <b>{key}: {createField(\"text\", \"contacts.\" + key, key, [], Input)}</b>\r\n          </div>\r\n        )\r\n      })}\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form:\"editProfile\"})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../assets/images/user-photo.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    const promise = props.saveProfile(formData)\r\n    promise.then(() => {\r\n      setEditMode(false)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className={styles.discriptionBlock}>\r\n        <div className={styles.profilePhoto}>\r\n          <img src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto} className={styles.userPhoto} alt=\"photo\"/>\r\n          {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n        </div>\r\n\r\n        <div className={styles.discriptionInfo}>\r\n          {editMode\r\n              ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} />\r\n              : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={props.profile} isOwner={props.isOwner}/>}\r\n        </div>\r\n\r\n        <ProfileStatusWithHooks status={props.status}\r\n                       updateStatus={props.updateStatus}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = (props) => {\r\n  return (\r\n    <div className={styles.profileData}>\r\n\r\n      <div><b>Full name</b>: {props.profile.fullName}</div>\r\n      <div><b>Looking for a job</b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n      {\r\n        props.profile.lookingForAJob &&\r\n        <div><b>My professional skills</b>: {props.profile.lookingForAJobDescription}</div>\r\n      }\r\n      <div><b>About me</b>: {props.profile.aboutMe}</div>\r\n      <div>\r\n        <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n      })}\r\n      </div>\r\n      <div>\r\n        {props.isOwner && <button onClick={props.goToEditMode}>Edit</button>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n  return (\r\n    <div className={styles.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.item}>\r\n      <div className={styles.itemBody}>\r\n        <div>\r\n          <img src=\"https://www.w3schools.com/howto/img_avatar.png\" alt=\"avatar\" />\r\n        </div>\r\n        <div>\r\n          { props.message }\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <span>{ props.likesCount } Like!</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let postsElements = [...props.posts].reverse().map(post => <Post message={post.message} key={post.id}\r\n                                                         likesCount={post.likesCount}/>)\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n  console.log(\"render\")\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className={styles.myPostBlock}>\r\n          <h2 className={styles.myPostTitle}>My posts</h2>\r\n          <h4>New post</h4>\r\n          <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n        </div>\r\n        <div className={styles.posts}>\r\n          {postsElements}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form className={styles.addNewPost} onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name={\"newPostText\"} component={Textarea} placeholder={\"Enter your post\"}\r\n               validate={[required, maxLength50]}/>\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n  form: \"ProfileAddNewPostForm\"\r\n})(AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n\r\n","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.gif\";\r\nimport styles from \"./Preloader.module.css\"\r\n\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div className={styles.preloader}>\r\n      <img src={preloader} alt=\"preloader\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader;","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n  if(!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile}\r\n                   status={props.status}\r\n                   updateStatus={props.updateStatus}\r\n                   isOwner={props.isOwner}\r\n                   savePhoto={props.savePhoto}\r\n                   saveProfile={props.saveProfile}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile = () => {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props}\r\n               profile={this.props.profile}\r\n               status={this.props.status}\r\n               updateStatus={this.props.updateStatus}\r\n               isOwner={!this.props.match.params.userId}\r\n               savePhoto={this.props.savePhoto}/>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./Pagination.module.css\";\r\nimport cn from \"classnames\"\r\n\r\nconst Pagination = (props) => {\r\n  let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n  let portionSize = 3\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.pagination}>\r\n      {\r\n        portionNumber > 1 &&\r\n          <button onClick={ () => {setPortionNumber(portionNumber - 1)} } className={styles.btnPagination}>prev</button>\r\n      }\r\n      {\r\n        pages\r\n        .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n        .map(p => {\r\n        return <span key={p.id}\r\n                     className={ cn ({\r\n          [styles.selectedPage]: props.currentPage === p\r\n        }, styles.pageNumber) }\r\n                     onClick={(e) => {\r\n                       props.onPageChanged(p)\r\n                     }}>{p}</span>\r\n      })\r\n      }\r\n      {\r\n        portionCount > portionNumber &&\r\n        <button onClick={ () => {setPortionNumber(portionNumber + 1)} } className={styles.btnPagination}>next</button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport styles from \"./Users.module.css\"\r\nimport userPhoto from \"../../assets/images/user-photo.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n  return (\r\n    <div className={styles.user}>\r\n      <div>\r\n        <div>\r\n          <NavLink to={\"/profile/\" + props.user.id}>\r\n            <img src={props.user.photos.small != null ? props.user.photos.small : userPhoto} className={styles.userPhoto} alt=\"photo\"/>\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {props.user.followed\r\n            ? <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                      onClick={() => {\r\n                        props.unfollow(props.user.id)\r\n                      }}>Unfollow</button>\r\n            : <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                      onClick={() => {\r\n                        props.follow(props.user.id)\r\n                      }}>Follow</button>}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <span>{props.user.name}</span>\r\n          <span>{props.user.status}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Pagination from \"../Common/Pagination/Pagination\";\r\nimport User from \"./User\";\r\n\r\nconst Users = (props) => {\r\n  return (\r\n    <div>\r\n      <Pagination totalItemsCount={props.totalItemsCount}\r\n                  pageSize={props.pageSize}\r\n                  currentPage={props.currentPage}\r\n                  onPageChanged={props.onPageChanged}/>\r\n      {\r\n        props.users.map(u => <User key={u.id}\r\n                                   user={u}\r\n                                   followingInProgress={props.followingInProgress}\r\n                                   unfollow={props.unfollow}\r\n                                   follow={props.follow}/>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n  return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n  return users.filter( u => true )\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalItemsCount = (state) => {\r\n  return state.usersPage.totalItemsCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {\r\n  follow, requestUsers,\r\n  setCurrentPage,\r\n  unfollow, toggleFollowingProgress,\r\n} from \"../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getCurrentPage, getUsers, getTotalItemsCount\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    const {currentPage, pageSize} = this.props;\r\n    this.props.getUsers(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    const {pageSize} = this.props;\r\n    this.props.setCurrentPage(pageNumber)\r\n    this.props.getUsers(pageNumber, pageSize);\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      {this.props.isFetching ? <Preloader /> : null}\r\n      <Users totalItemsCount={this.props.totalItemsCount}\r\n             pageSize={this.props.pageSize}\r\n             currentPage={this.props.currentPage}\r\n             onPageChanged={this.onPageChanged}\r\n             users={this.props.users}\r\n             unfollow={this.props.unfollow}\r\n             follow={this.props.follow}\r\n             followingInProgress={this.props.followingInProgress}/>\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalItemsCount: getTotalItemsCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsers: requestUsers, requestUsers\r\n  }),\r\n  withAuthRedirect\r\n)(UsersContainer);","import React from \"react\";\r\nimport \"./App.css\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Login from \"./components/Login/Login\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport withRouter from \"react-router-dom/es/withRouter\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/Common/Preloader/Preloader\";\r\n\r\nclass App extends React.Component {\r\n  catchAllUnhandledErrors = (promiseRejectionEvent) => {\r\n    alert(\"Some error occured\")\r\n    console.log(promiseRejectionEvent)\r\n  }\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer/>\r\n        <Navbar/>\r\n        <div className=\"app-wrapper-content\">\r\n          <Route path=\"/profile/:userId?\"\r\n                 render={() => <ProfileContainer/>}/>\r\n          <Route path=\"/\"\r\n                 render={() => <Login/>}/>\r\n          <Route path=\"/dialogs\"\r\n                 render={() => <DialogsContainer/>}/>\r\n          <Route path=\"/users\"\r\n                 render={() => <UsersContainer/>}/>\r\n          <Route path=\"/settings\" component={Settings} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {initializeApp}))(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>, document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Rbjb\",\"dialogItems\":\"Dialogs_dialogItems__l21ED\",\"dialog\":\"Dialogs_dialog__9kL5h\",\"activeLink\":\"Dialogs_activeLink___e3fq\",\"messages\":\"Dialogs_messages__3DXvD\",\"message\":\"Dialogs_message__18Grn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__1EeXj\",\"ProfileInfoImage\":\"ProfileInfo_ProfileInfoImage__1Bo3A\",\"discriptionInfo\":\"ProfileInfo_discriptionInfo__iANJS\",\"contscts\":\"ProfileInfo_contscts__3L3IY\",\"contacts\":\"ProfileInfo_contacts__2j_a6\",\"userPhoto\":\"ProfileInfo_userPhoto__cO8wN\",\"profilePhoto\":\"ProfileInfo_profilePhoto__afVZH\",\"profileData\":\"ProfileInfo_profileData__93BXR\",\"contact\":\"ProfileInfo_contact__2yh5L\"};","module.exports = __webpack_public_path__ + \"static/media/user-photo.739297c3.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__1WGwl\",\"selectedPage\":\"Pagination_selectedPage__2xOzB\",\"pageNumber\":\"Pagination_pageNumber__3bgJ4\",\"btnPagination\":\"Pagination_btnPagination__1_CwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostBlock\":\"MyPosts_myPostBlock__36hqI\",\"myPostTitle\":\"MyPosts_myPostTitle__3JbLP\",\"addNewPost\":\"MyPosts_addNewPost__2Xf3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1nALf\",\"loginBlock\":\"Header_loginBlock__3XYLH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__28QZ1\",\"itemBody\":\"Post_itemBody__1zDTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__qF9tY\",\"user\":\"Users_user__3RYYU\"};"],"sourceRoot":""}